{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenu dans le jeu Sys_QuiEstCe \u2693\ufe0e","title":"Home"},{"location":"#bienvenu-dans-le-jeu-sys_quiestce","text":"","title":"Bienvenu dans le jeu Sys_QuiEstCe"},{"location":"architecture/","text":"Welcome to MkDocs \u2693\ufe0e For full documentation visit mkdocs.org . Commands \u2693\ufe0e mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u2693\ufe0e mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"architecture/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"architecture/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"architecture/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"bkp_guide/","text":"Guide Utilisateur \u2693\ufe0e R\u00e9aliser par : \u2693\ufe0e Florent VILLENEUVE - Julien TERRIER - Adrien KAISER - Olivier MAHE Introduction \u2693\ufe0e Bienvenu dans notre projet informatique bas\u00e9 sur le principe d\u2019un serveur question/r\u00e9ponse, nous avons con\u00e7u un jeu reprenant les r\u00e8gles du tr\u00e8s c\u00e9l\u00e8bre \u00ab QUI-EST-CE ? \u00bb. Ce document est \u00e0 lire par tous les joueurs pour conna\u00eetre les \u00e9tapes \u00e0 r\u00e9aliser pour pouvoir lancer une partie. R\u00e8gles du jeu \u2693\ufe0e D\u00e9roulement de la partie, une fois connect\u00e9, vous devrez r\u00e9ussir \u00e0 travers un enchainement de question \u00e0 trouver le nom de l'\u00e9l\u00e8ve myst\u00e8re en fonction de ses caract\u00e9ristiques. Si vous trouvez l'\u00e9l\u00e8ve myst\u00e8re dans le temps imparti et avant les autres joueurs alors vous gagnez la partie. Installation logiciel \u2693\ufe0e Pour commencer : *Installer/poss\u00e9der le logiciel \u00ab Putty \u00bb *Sur Windows putty *Sur linux *Ouvrez votre terminal. *Taper la commande : \u00ab sudo apt install putty \u00bb Connection serveur \u2693\ufe0e Apr\u00e8s avoir installer Putty: 1. Connectez-vous au r\u00e9seau wifi \"SysQuiEstCe\" 2. mot de passe \"sysex2021!\" 3. Une fois connect\u00e9: * Ouvrez putty * Connectez-vous en SSH * Adresse IP: 10.3.141.1 \u2693\ufe0e Un terminal s'ouvre: * Connectez-vous avec l'identifiant: isen \u2693\ufe0e * Mot de passe: sysex2021! \u2693\ufe0e F\u00e9licitation, vous \u00eates connect\u00e9 au serveur. Lancement de la partie \u2693\ufe0e Pour lancer une partie: 1. Dirigez-vous dans le bon repertoire en utilisant la commande \u2693\ufe0e Attendez que tous les joueurs arrivent \u00e0 votre niveau. Lancez le programme en tapant \u2693\ufe0e","title":"Guide Utilisateur"},{"location":"bkp_guide/#guide-utilisateur","text":"","title":"Guide Utilisateur"},{"location":"bkp_guide/#realiser-par","text":"Florent VILLENEUVE - Julien TERRIER - Adrien KAISER - Olivier MAHE","title":"R\u00e9aliser par :"},{"location":"bkp_guide/#introduction","text":"Bienvenu dans notre projet informatique bas\u00e9 sur le principe d\u2019un serveur question/r\u00e9ponse, nous avons con\u00e7u un jeu reprenant les r\u00e8gles du tr\u00e8s c\u00e9l\u00e8bre \u00ab QUI-EST-CE ? \u00bb. Ce document est \u00e0 lire par tous les joueurs pour conna\u00eetre les \u00e9tapes \u00e0 r\u00e9aliser pour pouvoir lancer une partie.","title":"Introduction"},{"location":"bkp_guide/#regles-du-jeu","text":"D\u00e9roulement de la partie, une fois connect\u00e9, vous devrez r\u00e9ussir \u00e0 travers un enchainement de question \u00e0 trouver le nom de l'\u00e9l\u00e8ve myst\u00e8re en fonction de ses caract\u00e9ristiques. Si vous trouvez l'\u00e9l\u00e8ve myst\u00e8re dans le temps imparti et avant les autres joueurs alors vous gagnez la partie.","title":"R\u00e8gles du jeu"},{"location":"bkp_guide/#installation-logiciel","text":"Pour commencer : *Installer/poss\u00e9der le logiciel \u00ab Putty \u00bb *Sur Windows putty *Sur linux *Ouvrez votre terminal. *Taper la commande : \u00ab sudo apt install putty \u00bb","title":"Installation logiciel"},{"location":"bkp_guide/#connection-serveur","text":"Apr\u00e8s avoir installer Putty: 1. Connectez-vous au r\u00e9seau wifi \"SysQuiEstCe\" 2. mot de passe \"sysex2021!\" 3. Une fois connect\u00e9: * Ouvrez putty * Connectez-vous en SSH * Adresse IP: 10.3.141.1","title":"Connection serveur"},{"location":"bkp_guide/#_1","text":"Un terminal s'ouvre: * Connectez-vous avec l'identifiant: isen","title":""},{"location":"bkp_guide/#_2","text":"* Mot de passe: sysex2021!","title":""},{"location":"bkp_guide/#_3","text":"F\u00e9licitation, vous \u00eates connect\u00e9 au serveur.","title":""},{"location":"bkp_guide/#lancement-de-la-partie","text":"Pour lancer une partie: 1. Dirigez-vous dans le bon repertoire en utilisant la commande","title":"Lancement de la partie"},{"location":"bkp_guide/#_4","text":"Attendez que tous les joueurs arrivent \u00e0 votre niveau. Lancez le programme en tapant","title":""},{"location":"bkp_guide/#_5","text":"","title":""},{"location":"bkp_notice/","text":"Notice Technique \u2693\ufe0e R\u00e9aliser par : \u2693\ufe0e Florent VILLENEUVE - Julien TERRIER - Adrien KAISER - Olivier MAHE Introduction : \u2693\ufe0e Le but du projet et d'impl\u00e9menter un \"Qui est-ce ?\" comp\u00e9titif en ligne de commande qui permettra \u00e0 la classe de fraterniser joyeusement durant les pauses. Notre impl\u00e9mentation du jeu consistera \u00e0 ce que chaque \u00e9l\u00e8ve affronte l'ordinateur et devine le plus vite possible le personnage de celui-ci. Un classement sera effectu\u00e9 selon le temps mis par la classe et un gagnant pourra \u00eatre d\u00e9sign\u00e9 ainsi. L'interface \u00e9tant purement textuel il faudra que les personnages utilis\u00e9s soient connus de tous, nous prendront donc les \u00e9l\u00e8ves de la classe. Cahier des charges : \u2693\ufe0e Pour le mode de jeu de base d\u00e9crit plus haut : - Un \u00e9l\u00e8ve sera choisi al\u00e9atoirement parmi la base de donn\u00e9es - La liste des personnages sera affich\u00e9 \u00e0 l'\u00e9cran de l'utilisateur comme un vrai joueur devant son plateau de jeu - Les \u00e9l\u00e8ves pourront poser des questions \u00e0 l'ordinateur/au serveur. Exemple : \"Le personnage a-t-il les yeux bleus ?\" Ces choix ne seront pas tap\u00e9s \u00e0 la main mais choisie \u00e0 l'aide d'un menu - Ce cycle de question r\u00e9ponse se poursuit jusqu'\u00e0 ce que le joueur trouve le personnage - Le premier joueur qui gagne d\u00e9clenche l'arret de la partie Organigramme de l\u2019\u00e9quipe projet : \u2693\ufe0e Chef de projet Commercial Syst\u00e8me Administeur Architecte Programme Olivier MAHE Adrien KAISER Julien TERRIER Florent VILLENEUVE Mise en place du projet : \u2693\ufe0e Pr\u00e9mice du projet \u2693\ufe0e Nous avons dans un premier temps d\u00e9fini, les grandes lignes du projet en se r\u00e9unissant autour d'un diagramme explicatif de nos id\u00e9es. Une fois nos id\u00e9es misent en accords, nous avons commenc\u00e9 les tests avec la r\u00e9alisations de pipe nomm\u00e9s, la base de donn\u00e9es... \u2693\ufe0e Des que notre base fut \u00e9tablie, nous nous sommes lanc\u00e9 dans l'\u00e9laboration d'une architecture viable. C'est-\u00e0-dire d'avoir une base qui fait tourner le programme sur une RPI avec une connection des clients en ssh, Pour plus de d\u00e9tails, nous avons r\u00e9aliser deux programmes fonctionnant sur la m\u00eame machine qui communique via des pipes. Premi\u00e8re base \u2693\ufe0e Apr\u00e8s avoir con\u00e7u notre premi\u00e8re architecture nous avons pu affiner notre vision du projet et nous recentrer sur une m\u00eame vision des choses, en modifiant le fonctionnement du programme serveur pour qu'il cr\u00e9er un processus fils \u00e0 chaque connection d'un client qui renvoyer un une r\u00e9ponse au client pour savoir si tout c'est bien cr\u00e9er. \u2693\ufe0e Une fois la communication fonctionnelle nous avons commenc\u00e9 l'\u00e9laboration du menu permettant de jouer dans le programme client pour r\u00e9duire le nombre d'\u00e9change serveur/client. Architecture finale \u2693\ufe0e Enfin, apr\u00e8s avoir r\u00e9ussi \u00e0 impl\u00e9menter tout nos attente, nous avons choisi d'ajouter une carte olimex avec un \u00e9cran \u00e0 notre syst\u00e8me pour afficher le nom du gagnant, et \u00e9galement parfaire l'ensemble du projet \u2693\ufe0e","title":"Notice Technique"},{"location":"bkp_notice/#notice-technique","text":"","title":"Notice Technique"},{"location":"bkp_notice/#realiser-par","text":"Florent VILLENEUVE - Julien TERRIER - Adrien KAISER - Olivier MAHE","title":"R\u00e9aliser par :"},{"location":"bkp_notice/#introduction","text":"Le but du projet et d'impl\u00e9menter un \"Qui est-ce ?\" comp\u00e9titif en ligne de commande qui permettra \u00e0 la classe de fraterniser joyeusement durant les pauses. Notre impl\u00e9mentation du jeu consistera \u00e0 ce que chaque \u00e9l\u00e8ve affronte l'ordinateur et devine le plus vite possible le personnage de celui-ci. Un classement sera effectu\u00e9 selon le temps mis par la classe et un gagnant pourra \u00eatre d\u00e9sign\u00e9 ainsi. L'interface \u00e9tant purement textuel il faudra que les personnages utilis\u00e9s soient connus de tous, nous prendront donc les \u00e9l\u00e8ves de la classe.","title":"Introduction :"},{"location":"bkp_notice/#cahier-des-charges","text":"Pour le mode de jeu de base d\u00e9crit plus haut : - Un \u00e9l\u00e8ve sera choisi al\u00e9atoirement parmi la base de donn\u00e9es - La liste des personnages sera affich\u00e9 \u00e0 l'\u00e9cran de l'utilisateur comme un vrai joueur devant son plateau de jeu - Les \u00e9l\u00e8ves pourront poser des questions \u00e0 l'ordinateur/au serveur. Exemple : \"Le personnage a-t-il les yeux bleus ?\" Ces choix ne seront pas tap\u00e9s \u00e0 la main mais choisie \u00e0 l'aide d'un menu - Ce cycle de question r\u00e9ponse se poursuit jusqu'\u00e0 ce que le joueur trouve le personnage - Le premier joueur qui gagne d\u00e9clenche l'arret de la partie","title":"Cahier des charges :"},{"location":"bkp_notice/#organigramme-de-lequipe-projet","text":"Chef de projet Commercial Syst\u00e8me Administeur Architecte Programme Olivier MAHE Adrien KAISER Julien TERRIER Florent VILLENEUVE","title":"Organigramme de l\u2019\u00e9quipe projet :"},{"location":"bkp_notice/#mise-en-place-du-projet","text":"","title":"Mise en place du projet :"},{"location":"bkp_notice/#premice-du-projet","text":"Nous avons dans un premier temps d\u00e9fini, les grandes lignes du projet en se r\u00e9unissant autour d'un diagramme explicatif de nos id\u00e9es. Une fois nos id\u00e9es misent en accords, nous avons commenc\u00e9 les tests avec la r\u00e9alisations de pipe nomm\u00e9s, la base de donn\u00e9es...","title":"Pr\u00e9mice du projet"},{"location":"bkp_notice/#_1","text":"Des que notre base fut \u00e9tablie, nous nous sommes lanc\u00e9 dans l'\u00e9laboration d'une architecture viable. C'est-\u00e0-dire d'avoir une base qui fait tourner le programme sur une RPI avec une connection des clients en ssh, Pour plus de d\u00e9tails, nous avons r\u00e9aliser deux programmes fonctionnant sur la m\u00eame machine qui communique via des pipes.","title":""},{"location":"bkp_notice/#premiere-base","text":"Apr\u00e8s avoir con\u00e7u notre premi\u00e8re architecture nous avons pu affiner notre vision du projet et nous recentrer sur une m\u00eame vision des choses, en modifiant le fonctionnement du programme serveur pour qu'il cr\u00e9er un processus fils \u00e0 chaque connection d'un client qui renvoyer un une r\u00e9ponse au client pour savoir si tout c'est bien cr\u00e9er.","title":"Premi\u00e8re base"},{"location":"bkp_notice/#_2","text":"Une fois la communication fonctionnelle nous avons commenc\u00e9 l'\u00e9laboration du menu permettant de jouer dans le programme client pour r\u00e9duire le nombre d'\u00e9change serveur/client.","title":""},{"location":"bkp_notice/#architecture-finale","text":"Enfin, apr\u00e8s avoir r\u00e9ussi \u00e0 impl\u00e9menter tout nos attente, nous avons choisi d'ajouter une carte olimex avec un \u00e9cran \u00e0 notre syst\u00e8me pour afficher le nom du gagnant, et \u00e9galement parfaire l'ensemble du projet","title":"Architecture finale"},{"location":"bkp_notice/#_3","text":"","title":""},{"location":"guide/","text":"Guide Utilisateur \u2693\ufe0e R\u00e9aliser par : \u2693\ufe0e Florent VILLENEUVE - Julien TERRIER - Adrien KAISER - Olivier MAHE Introduction \u2693\ufe0e Bienvenue dans notre projet informatique bas\u00e9 sur le principe d\u2019un serveur question/r\u00e9ponse, nous avons con\u00e7u un jeu reprenant les r\u00e8gles du tr\u00e8s c\u00e9l\u00e8bre \u00ab QUI-EST-CE ? \u00bb. Ce document est \u00e0 lire par tous les joueurs pour conna\u00eetre les \u00e9tapes \u00e0 r\u00e9aliser pour pouvoir lancer une partie. R\u00e8gles du jeu \u2693\ufe0e D\u00e9roulement de la partie, une fois connect\u00e9, vous devrez r\u00e9ussir \u00e0 travers un enchainement de question \u00e0 trouver le nom de l'\u00e9l\u00e8ve myst\u00e8re en fonction de ses caract\u00e9ristiques. Si vous trouvez l'\u00e9l\u00e8ve myst\u00e8re dans le temps imparti et avant les autres joueurs alors vous gagnez la partie. Installation logiciel \u2693\ufe0e Pour commencer : Installer/poss\u00e9der le logiciel \u00ab Putty \u00bb Sur Windows putty Sur linux Ouvrez votre terminal. Taper la commande : \u00ab sudo apt install putty \u00bb Connection serveur \u2693\ufe0e Apr\u00e8s avoir installer Putty: Connectez-vous au r\u00e9seau wifi \"SysQuiEstCe\" mot de passe \"sysex2021!\" Une fois connect\u00e9: Ouvrez putty Connectez-vous en SSH Adresse IP: 10.3.141.1 Un terminal s'ouvre: Connectez-vous avec l'identifiant: isen Mot de passe: sysex2021! F\u00e9licitation, vous \u00eates connect\u00e9 au serveur. Lancement de la partie \u2693\ufe0e Pour lancer une partie: - Dirigez-vous dans le bon repertoire en utilisant la commande 1 cd Sys_QuiEstCe-/client/. Attendez que tous les joueurs arrivent \u00e0 votre niveau. Lancez le programme en tapant 1 ./client","title":"Guide utilisateur"},{"location":"guide/#guide-utilisateur","text":"","title":"Guide Utilisateur"},{"location":"guide/#realiser-par","text":"Florent VILLENEUVE - Julien TERRIER - Adrien KAISER - Olivier MAHE","title":"R\u00e9aliser par :"},{"location":"guide/#introduction","text":"Bienvenue dans notre projet informatique bas\u00e9 sur le principe d\u2019un serveur question/r\u00e9ponse, nous avons con\u00e7u un jeu reprenant les r\u00e8gles du tr\u00e8s c\u00e9l\u00e8bre \u00ab QUI-EST-CE ? \u00bb. Ce document est \u00e0 lire par tous les joueurs pour conna\u00eetre les \u00e9tapes \u00e0 r\u00e9aliser pour pouvoir lancer une partie.","title":"Introduction"},{"location":"guide/#regles-du-jeu","text":"D\u00e9roulement de la partie, une fois connect\u00e9, vous devrez r\u00e9ussir \u00e0 travers un enchainement de question \u00e0 trouver le nom de l'\u00e9l\u00e8ve myst\u00e8re en fonction de ses caract\u00e9ristiques. Si vous trouvez l'\u00e9l\u00e8ve myst\u00e8re dans le temps imparti et avant les autres joueurs alors vous gagnez la partie.","title":"R\u00e8gles du jeu"},{"location":"guide/#installation-logiciel","text":"Pour commencer : Installer/poss\u00e9der le logiciel \u00ab Putty \u00bb Sur Windows putty Sur linux Ouvrez votre terminal. Taper la commande : \u00ab sudo apt install putty \u00bb","title":"Installation logiciel"},{"location":"guide/#connection-serveur","text":"Apr\u00e8s avoir installer Putty: Connectez-vous au r\u00e9seau wifi \"SysQuiEstCe\" mot de passe \"sysex2021!\" Une fois connect\u00e9: Ouvrez putty Connectez-vous en SSH Adresse IP: 10.3.141.1 Un terminal s'ouvre: Connectez-vous avec l'identifiant: isen Mot de passe: sysex2021! F\u00e9licitation, vous \u00eates connect\u00e9 au serveur.","title":"Connection serveur"},{"location":"guide/#lancement-de-la-partie","text":"Pour lancer une partie: - Dirigez-vous dans le bon repertoire en utilisant la commande 1 cd Sys_QuiEstCe-/client/. Attendez que tous les joueurs arrivent \u00e0 votre niveau. Lancez le programme en tapant 1 ./client","title":"Lancement de la partie"},{"location":"notice/","text":"Notice Technique \u2693\ufe0e R\u00e9aliser par : \u2693\ufe0e Florent VILLENEUVE - Julien TERRIER - Adrien KAISER - Olivier MAHE Introduction : \u2693\ufe0e Le but du projet est d'impl\u00e9menter un \"Qui est-ce ?\" comp\u00e9titif en ligne de commande qui permettra \u00e0 la classe de fraterniser joyeusement durant les pauses. Notre impl\u00e9mentation du jeu consistera \u00e0 ce que chaque \u00e9l\u00e8ve affronte l'ordinateur et devine le plus vite possible le personnage de celui-ci. Un classement sera effectu\u00e9 selon le temps mis par la classe et un gagnant pourra \u00eatre d\u00e9sign\u00e9 ainsi. L'interface \u00e9tant purement textuel il faudra que les personnages utilis\u00e9s soient connus de tous, nous prendront donc les \u00e9l\u00e8ves de la classe. Cahier des charges : \u2693\ufe0e Pour le mode de jeu de base d\u00e9crit plus haut : - Un \u00e9l\u00e8ve sera choisi al\u00e9atoirement parmi la base de donn\u00e9es - La liste des personnages sera affich\u00e9 \u00e0 l'\u00e9cran de l'utilisateur comme un vrai joueur devant son plateau de jeu - Les \u00e9l\u00e8ves pourront poser des questions \u00e0 l'ordinateur/au serveur. Exemple : \"Le personnage a-t-il les yeux bleus ?\" Ces choix ne seront pas tap\u00e9s \u00e0 la main mais choisie \u00e0 l'aide d'un menu - Ce cycle de question r\u00e9ponse se poursuit jusqu'\u00e0 ce que le joueur trouve le personnage - Le premier joueur qui gagne d\u00e9clenche l'arret de la partie Organigramme de l\u2019\u00e9quipe projet : \u2693\ufe0e Chef de projet Commercial Syst\u00e8me Administeur Architecte Programme Olivier MAHE Adrien KAISER Julien TERRIER Florent VILLENEUVE Mise en place du projet : \u2693\ufe0e Pr\u00e9mice du projet \u2693\ufe0e Nous avons dans un premier temps d\u00e9fini, les grandes lignes du projet en se r\u00e9unissant autour d'un diagramme explicatif de nos id\u00e9es. Une fois nos id\u00e9es mises en accords, nous avons commenc\u00e9 les tests avec la r\u00e9alisation de pipe nomm\u00e9s, la base de donn\u00e9es... D\u00e8s que notre base fut \u00e9tablie, nous nous sommes lanc\u00e9 dans l'\u00e9laboration d'une architecture viable. C'est-\u00e0-dire d'avoir une base qui fait tourner le programme sur une RPI avec une connection des clients en ssh, Pour plus de d\u00e9tails, nous avons r\u00e9aliser deux programmes fonctionnant sur la m\u00eame machine qui communique via des pipes. Premi\u00e8re base \u2693\ufe0e Apr\u00e8s avoir con\u00e7u notre premi\u00e8re architecture nous avons pu affiner notre vision du projet et nous recentrer sur une m\u00eame vision des choses, en modifiant le fonctionnement du programme serveur pour qu'il cr\u00e9e un processus fils \u00e0 chaque connexion d'un client qui renvoie une r\u00e9ponse au client pour savoir si tout c'est bien cr\u00e9er. Une fois la communication fonctionnelle nous avons commenc\u00e9 l'\u00e9laboration du menu permettant de jouer dans le programme client pour r\u00e9duire le nombre d'\u00e9changes serveur/client. Architecture finale \u2693\ufe0e Enfin, apr\u00e8s avoir r\u00e9ussi \u00e0 impl\u00e9menter toutes nos attentes, nous avons choisi d'ajouter une carte olimex avec un \u00e9cran \u00e0 notre syst\u00e8me pour afficher le nom du gagnant, et \u00e9galement parfaire l'ensemble du projet Programmation syst\u00e8me \u2693\ufe0e Le but de ce projet fut avant tout de nous familiariser avec les concepts vus en cours. Les tubes \u2693\ufe0e Nous avons utilis\u00e9 un tube nomm\u00e9 principal pour assurer la communication entre tous les clients et le serveur, ainsi que plusieurs tubes nomm\u00e9s individuels permettant au serveur de communiquer avec chaque client. Les appels syst\u00e8mes \u2693\ufe0e Les fork() sont utilis\u00e9s pour instancier des processus fils lors de la connexion des clients, et \u00e9galement pour le sous-programme socket.c Les primitives de recouvrements \u2693\ufe0e Nous utilisons un execv() qui nous permet de modifier un processus fils du serveur et ainsi lancer le sous-programme socket.c Les signaux \u2693\ufe0e Des signaux sont utilis\u00e9s pour interrompre des processus comme: le signal SIGALRM pour arr\u00eater le programme une fois que le nombre de secondes plac\u00e9es en param\u00e8tres est \u00e9coul\u00e9. les signaux SIGUSR pour notifier les clients lors de la victoire d'un joueur et aussi pour informer que le nombre maximal de joueurs sont atteints. le signal SIGKILL permet d'empecher un client non autoris\u00e9 \u00e0 rejoindre la partie. Test Unitaire \u2693\ufe0e En programmation informatique, le test unitaire est une proc\u00e9dure permettant de v\u00e9rifier le bon fonctionnement d'une partie pr\u00e9cise d'un logiciel ou d'une portion d'un programme (appel\u00e9e \u00ab unit\u00e9 \u00bb ou \u00ab module \u00bb). Check est un framework de tests unitaires pour C: Il dispose d'une interface simple pour d\u00e9finir des tests unitaires, mettant peu d'obstacles pour le d\u00e9veloppeur. Les tests sont ex\u00e9cut\u00e9s dans un espace d'adressage s\u00e9par\u00e9, de sorte que les \u00e9checs d'assertion et les erreurs de code qui provoquent des d\u00e9fauts de segmentation ou d'autres signaux peuvent \u00eatre d\u00e9tect\u00e9s. 1 2 3 4 5 6 7 8 9 10 11 START_TEST ( test_nofork_sideeffects ) { ck_assert_msg ( counter == 1 , \"Side effects not seen across tests\" ) ; } END_TEST","title":"Guide technique"},{"location":"notice/#notice-technique","text":"","title":"Notice Technique"},{"location":"notice/#realiser-par","text":"Florent VILLENEUVE - Julien TERRIER - Adrien KAISER - Olivier MAHE","title":"R\u00e9aliser par :"},{"location":"notice/#introduction","text":"Le but du projet est d'impl\u00e9menter un \"Qui est-ce ?\" comp\u00e9titif en ligne de commande qui permettra \u00e0 la classe de fraterniser joyeusement durant les pauses. Notre impl\u00e9mentation du jeu consistera \u00e0 ce que chaque \u00e9l\u00e8ve affronte l'ordinateur et devine le plus vite possible le personnage de celui-ci. Un classement sera effectu\u00e9 selon le temps mis par la classe et un gagnant pourra \u00eatre d\u00e9sign\u00e9 ainsi. L'interface \u00e9tant purement textuel il faudra que les personnages utilis\u00e9s soient connus de tous, nous prendront donc les \u00e9l\u00e8ves de la classe.","title":"Introduction :"},{"location":"notice/#cahier-des-charges","text":"Pour le mode de jeu de base d\u00e9crit plus haut : - Un \u00e9l\u00e8ve sera choisi al\u00e9atoirement parmi la base de donn\u00e9es - La liste des personnages sera affich\u00e9 \u00e0 l'\u00e9cran de l'utilisateur comme un vrai joueur devant son plateau de jeu - Les \u00e9l\u00e8ves pourront poser des questions \u00e0 l'ordinateur/au serveur. Exemple : \"Le personnage a-t-il les yeux bleus ?\" Ces choix ne seront pas tap\u00e9s \u00e0 la main mais choisie \u00e0 l'aide d'un menu - Ce cycle de question r\u00e9ponse se poursuit jusqu'\u00e0 ce que le joueur trouve le personnage - Le premier joueur qui gagne d\u00e9clenche l'arret de la partie","title":"Cahier des charges :"},{"location":"notice/#organigramme-de-lequipe-projet","text":"Chef de projet Commercial Syst\u00e8me Administeur Architecte Programme Olivier MAHE Adrien KAISER Julien TERRIER Florent VILLENEUVE","title":"Organigramme de l\u2019\u00e9quipe projet :"},{"location":"notice/#mise-en-place-du-projet","text":"","title":"Mise en place du projet :"},{"location":"notice/#premice-du-projet","text":"Nous avons dans un premier temps d\u00e9fini, les grandes lignes du projet en se r\u00e9unissant autour d'un diagramme explicatif de nos id\u00e9es. Une fois nos id\u00e9es mises en accords, nous avons commenc\u00e9 les tests avec la r\u00e9alisation de pipe nomm\u00e9s, la base de donn\u00e9es... D\u00e8s que notre base fut \u00e9tablie, nous nous sommes lanc\u00e9 dans l'\u00e9laboration d'une architecture viable. C'est-\u00e0-dire d'avoir une base qui fait tourner le programme sur une RPI avec une connection des clients en ssh, Pour plus de d\u00e9tails, nous avons r\u00e9aliser deux programmes fonctionnant sur la m\u00eame machine qui communique via des pipes.","title":"Pr\u00e9mice du projet"},{"location":"notice/#premiere-base","text":"Apr\u00e8s avoir con\u00e7u notre premi\u00e8re architecture nous avons pu affiner notre vision du projet et nous recentrer sur une m\u00eame vision des choses, en modifiant le fonctionnement du programme serveur pour qu'il cr\u00e9e un processus fils \u00e0 chaque connexion d'un client qui renvoie une r\u00e9ponse au client pour savoir si tout c'est bien cr\u00e9er. Une fois la communication fonctionnelle nous avons commenc\u00e9 l'\u00e9laboration du menu permettant de jouer dans le programme client pour r\u00e9duire le nombre d'\u00e9changes serveur/client.","title":"Premi\u00e8re base"},{"location":"notice/#architecture-finale","text":"Enfin, apr\u00e8s avoir r\u00e9ussi \u00e0 impl\u00e9menter toutes nos attentes, nous avons choisi d'ajouter une carte olimex avec un \u00e9cran \u00e0 notre syst\u00e8me pour afficher le nom du gagnant, et \u00e9galement parfaire l'ensemble du projet","title":"Architecture finale"},{"location":"notice/#programmation-systeme","text":"Le but de ce projet fut avant tout de nous familiariser avec les concepts vus en cours.","title":"Programmation syst\u00e8me"},{"location":"notice/#les-tubes","text":"Nous avons utilis\u00e9 un tube nomm\u00e9 principal pour assurer la communication entre tous les clients et le serveur, ainsi que plusieurs tubes nomm\u00e9s individuels permettant au serveur de communiquer avec chaque client.","title":"Les tubes"},{"location":"notice/#les-appels-systemes","text":"Les fork() sont utilis\u00e9s pour instancier des processus fils lors de la connexion des clients, et \u00e9galement pour le sous-programme socket.c","title":"Les appels syst\u00e8mes"},{"location":"notice/#les-primitives-de-recouvrements","text":"Nous utilisons un execv() qui nous permet de modifier un processus fils du serveur et ainsi lancer le sous-programme socket.c","title":"Les primitives de recouvrements"},{"location":"notice/#les-signaux","text":"Des signaux sont utilis\u00e9s pour interrompre des processus comme: le signal SIGALRM pour arr\u00eater le programme une fois que le nombre de secondes plac\u00e9es en param\u00e8tres est \u00e9coul\u00e9. les signaux SIGUSR pour notifier les clients lors de la victoire d'un joueur et aussi pour informer que le nombre maximal de joueurs sont atteints. le signal SIGKILL permet d'empecher un client non autoris\u00e9 \u00e0 rejoindre la partie.","title":"Les signaux"},{"location":"notice/#test-unitaire","text":"En programmation informatique, le test unitaire est une proc\u00e9dure permettant de v\u00e9rifier le bon fonctionnement d'une partie pr\u00e9cise d'un logiciel ou d'une portion d'un programme (appel\u00e9e \u00ab unit\u00e9 \u00bb ou \u00ab module \u00bb). Check est un framework de tests unitaires pour C: Il dispose d'une interface simple pour d\u00e9finir des tests unitaires, mettant peu d'obstacles pour le d\u00e9veloppeur. Les tests sont ex\u00e9cut\u00e9s dans un espace d'adressage s\u00e9par\u00e9, de sorte que les \u00e9checs d'assertion et les erreurs de code qui provoquent des d\u00e9fauts de segmentation ou d'autres signaux peuvent \u00eatre d\u00e9tect\u00e9s. 1 2 3 4 5 6 7 8 9 10 11 START_TEST ( test_nofork_sideeffects ) { ck_assert_msg ( counter == 1 , \"Side effects not seen across tests\" ) ; } END_TEST","title":"Test Unitaire"},{"location":"presentation/","text":"Pr\u00e9sentation \u2693\ufe0e","title":"Presentation"},{"location":"presentation/#presentation","text":"","title":"Pr\u00e9sentation"}]}